import dash
import dash_core_components as dcc
import dash_html_components as html
from dash.dependencies import Input, Output

# Initialize the app
app = dash.Dash(__name__)

# Define the layout
app.layout = html.Div(
    children=[
        html.H1("Selected US State & County Demographics"),
        dcc.Dropdown(
            id="location-dropdown", #Identifier for the dropdown component.
            options=[
                {"label": "United States", "value": "US"},
                {"label": "Alabama", "value": "01"},
                {"label": "Alaska", "value": "02"},
                {"label": "Arizona", "value": "04"},
                {"label": "Arkansas", "value": "05"},
                {"label": "California", "value": "06"},
                {"label": "Colorado", "value": "08"},
                {"label": "Connecticut", "value": "09"},
                {"label": "Delaware", "value": "10"},
                {"label": "Florida", "value": "12"},
                {"label": "Georgia", "value": "13"},
                {"label": "Hawaii", "value": "15"},
                {"label": "Idaho", "value": "16"},
                {"label": "Illinois", "value": "17"},
                {"label": "Indiana", "value": "18"},
                {"label": "Iowa", "value": "19"},
                {"label": "Kansas", "value": "20"},
                {"label": "Kentucky", "value": "21"},
                {"label": "Louisiana", "value": "22"},
                {"label": "Maine", "value": "23"},
                {"label": "Maryland", "value": "24"},
                {"label": "Massachusetts", "value": "25"},
                {"label": "Michigan", "value": "26"},
                {"label": "Minnesota", "value": "27"},
                {"label": "Mississippi", "value": "28"},
                {"label": "Missouri", "value": "29"},
                {"label": "Montana", "value": "30"},
                {"label": "Nebraska", "value": "31"},
                {"label": "Nevada", "value": "32"},
                {"label": "New Hampshire", "value": "33"},
                {"label": "New Jersey", "value": "34"},
                {"label": "New Mexico", "value": "35"},
                {"label": "New York", "value": "36"},
                {"label": "North Carolina", "value": "37"},
                {"label": "North Dakota", "value": "38"},
                {"label": "Ohio", "value": "39"},
                {"label": "Oklahoma", "value": "40"},
                {"label": "Oregon", "value": "41"},
                {"label": "Pennsylvania", "value": "42"},
                {"label": "Rhode Island", "value": "44"},
                {"label": "South Carolina", "value": "45"},
                {"label": "South Dakota", "value": "46"},
                {"label": "Tennessee", "value": "47"},
                {"label": "Texas", "value": "48"},
                {"label": "Utah", "value": "49"},
                {"label": "Vermont", "value": "50"},
                {"label": "Virginia", "value": "51"},
                {"label": "Washington", "value": "53"},
                {"label": "West Virginia", "value": "54"},
                {"label": "Wisconsin", "value": "55"},
                {"label": "Wyoming", "value": "56"}
                ],
            value="US", #dropdown will default to 'United States'
 ),
        # Row 1, span 3 col
        html.Div(
            children=[
                html.Div(
                    dcc.Graph(id="choropleth-map"),
                    className="four columns"
                ),
            ],
            className="row"
        ),

        # Row 2, span 3 col
        html.Div(
            children=[
                # Row 2, span 1 col, left column
                html.Div(
                    dcc.Graph(id="pie-chart"),
                    className="four columns"
                ),
                # Row 2, span 1 col, middle column
                html.Div(
                    dcc.Graph(id="stacked-bar-chart"),
                    className="four columns"
                ),
                # Row 2, span 1 col, right column
                html.Div(
                    dcc.Graph(id="violin-chart"),
                    className="four columns"
                ),
            ],
            className="row"
        ),
    ]
)


# Define callbacks

@app.callback(
    Output("choropleth-map", "figure"),
    Output("pie-chart", "figure"),
    Output("stacked-bar-chart", "figure"),
    Output("violin-chart", "figure"),
    Input("location-dropdown", "value")
)
def update_charts(selected_location):
    # Update the choropleth map based on selected_location
    # Use the FIPS code to zoom in on the selected state or the entire United States
    
    # Update the pie chart, stacked bar chart, and violin chart based on selected_location
    # Use the hover data from the choropleth map and on-click events to modify charts
    
    # Return the updated figures for each chart
    return updated_choropleth_map, updated_pie_chart, updated_stacked_bar_chart, updated_violin_chart


if __name__ == "__main__":
    app.run_server(debug=True)